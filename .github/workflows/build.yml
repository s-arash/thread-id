name: Build

on:
  push:
    branches: ["master"]

  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-native:
    strategy:
      matrix:
        rust: ["1.34.2", "1.50.0", "beta", "nightly"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2
      - name: Install toolchain
        run: "rustup toolchain install ${{ matrix.rust }}"
      - name: Build
        run: "cargo +${{ matrix.rust }} build --verbose"
      - name: Run tests
        run: "cargo +${{ matrix.rust }} test --verbose"

  build-wasm:
    strategy:
      matrix:
        rust: ["1.50.0"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2
      - name: Install toolchain
        run: "rustup toolchain install ${{ matrix.rust }} && rustup target add wasm32-unknown-unknown --toolchain ${{ matrix.rust }}"
      - name: Build
        run: "cargo +${{ matrix.rust }} build --target wasm32-unknown-unknown --verbose"

  check-sgx:
    strategy:
      matrix:
        rust: ["1.50.0"]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2
      - name: Install toolchain & targets
        run: "rustup toolchain install ${{ matrix.rust }} && rustup target add x86_64-fortanix-unknown-sgx --toolchain ${{ matrix.rust }}"
      - name: Build
        run: "cargo +${{ matrix.rust }} check --target x86_64-fortanix-unknown-sgx --verbose"
